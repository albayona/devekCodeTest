{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx\",\n  _s = $RefreshSig$();\n// ChatRoom.tsx\nimport React, { useRef, useState } from 'react';\nimport { Box, Container, Typography } from '@mui/material';\nimport Message from './Message';\nimport { API_HOST } from '../../hooks/UseFetch';\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { useFetch } from \"../../hooks/UseFetch\";\nimport { useSocket } from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function generateRequest({\n  updateTrigger,\n  setUpdateTrigger,\n  setData,\n  token,\n  user,\n  endpoint,\n  queryParams\n}) {\n  return {\n    triggerRequest: updateTrigger,\n    setTriggerRequest: setUpdateTrigger,\n    callback: data => {\n      setUpdateTrigger(false);\n      setData(data);\n    },\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n      \"X-Consumer-Custom-Id\": String(user)\n    },\n    endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n    payload: null\n  };\n}\nconst ChatRoom = ({\n  room\n}) => {\n  _s();\n  const [oldMessages, setOldMessages] = useState([]);\n  const {\n    getMessagesByRoom\n  } = useSocket();\n  const [updateTrigger, setUpdateTrigger] = useState(false);\n  const newMessages = getMessagesByRoom(room);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  console.log(newMessages);\n  const {\n    token\n  } = useAuth();\n  const {\n    user\n  } = useAuth();\n  const oldMessagesParams = {\n    updateTrigger,\n    setUpdateTrigger,\n    setData: setOldMessages,\n    token,\n    user,\n    endpoint: \"\",\n    queryParams: \"\"\n  };\n  const req = generateRequest(oldMessagesParams);\n  const [error, isLoading] = useFetch(req);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 2,\n        height: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxHeight: '550px',\n          overflowY: 'auto',\n          mb: 2\n        },\n        children: newMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          sender: msg.sender,\n          text: msg.text,\n          timestamp: msg.date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInputBar, {\n      room: room,\n      scrollToBottom: scrollToBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"OWElrxsfgf6ytOlKDVSvDjtFgcA=\", false, function () {\n  return [useSocket, useAuth, useAuth, useFetch];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useRef","useState","Box","Container","Typography","Message","API_HOST","useAuth","useFetch","useSocket","ChatInputBar","jsxDEV","_jsxDEV","generateRequest","updateTrigger","setUpdateTrigger","setData","token","user","endpoint","queryParams","triggerRequest","setTriggerRequest","callback","data","method","headers","String","payload","ChatRoom","room","_s","oldMessages","setOldMessages","getMessagesByRoom","newMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","console","log","oldMessagesParams","req","error","isLoading","children","sx","my","height","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","mb","map","msg","index","sender","text","timestamp","date","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\nimport React, {useRef, useState} from 'react';\nimport { Box, TextField, Button, Container, Typography, Grid } from '@mui/material';\nimport Message from './Message';\nimport { API_HOST } from '../../hooks/UseFetch';\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {FetchRequest, useFetch} from \"../../hooks/UseFetch\";\nimport { useSocket } from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';\ninterface ChatRoomProps {\n  room: string;\n}\n\ninterface ChatMessage {\n  sender: string;\n  text: string;\n  timestamp: string;\n}\n\ntype Request = {\n    updateTrigger: boolean;\n    setUpdateTrigger: (value: boolean) => void;\n    setData: (data: ChatMessage[]) => void;\n    token: string;\n    user: string | null;\n    endpoint: string;\n    queryParams: string;\n  };\n\n  export function generateRequest({\n    updateTrigger,\n    setUpdateTrigger,\n    setData,\n    token,\n    user,\n    endpoint,\n    queryParams,\n  }: Request) {\n    return {\n      triggerRequest: updateTrigger,\n      setTriggerRequest: setUpdateTrigger,\n      callback: (data: any) => {\n        setUpdateTrigger(false);\n        setData(data);\n      },\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"X-Consumer-Custom-Id\": String(user),\n      },\n\n      endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n      payload: null,\n    };\n  }\n\n\n\nconst ChatRoom: React.FC<ChatRoomProps> = ({ room }) => {\n\n  const [oldMessages, setOldMessages] = useState<ChatMessage[]>([]);\n  const {getMessagesByRoom} = useSocket();\n  const [updateTrigger, setUpdateTrigger] = useState<boolean>(false);\n  const newMessages = getMessagesByRoom(room);\n\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n\n    console.log(newMessages);\n\n  const {token} = useAuth();\n  const {user} = useAuth();\n\n  const oldMessagesParams: Request = {updateTrigger, setUpdateTrigger, setData: setOldMessages, token, user, endpoint: \"\", queryParams: \"\" };\n\n\n\n\n   const req: FetchRequest = generateRequest(oldMessagesParams);\n   const [error, isLoading] = useFetch(req);\n\n\n  return (\n    <Container>\n      <Box sx={{ my: 2, height: \"600px\" }} >\n        <Typography variant=\"h4\" gutterBottom>\n          {room}\n        </Typography>\n        <Box sx={{ maxHeight: '550px', overflowY: 'auto', mb: 2 }}>\n          {newMessages.map((msg, index) => (\n            <Message\n              key={index}\n              sender={msg.sender}\n              text={msg.text}\n              timestamp={msg.date}\n            />\n          ))}\n        </Box>\n\n      </Box>\n      <ChatInputBar room={room} scrollToBottom={ scrollToBottom}/>\n    </Container>\n\n  );\n};\n\n\n\n\nexport default ChatRoom;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAASC,GAAG,EAAqBC,SAAS,EAAEC,UAAU,QAAc,eAAe;AACnF,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAAQC,OAAO,QAAO,4BAA4B;AAClD,SAAsBC,QAAQ,QAAO,sBAAsB;AAC3D,SAASC,SAAS,QAAQ,iCAAiC;AAC3D,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqBxC,OAAO,SAASC,eAAeA,CAAC;EAC9BC,aAAa;EACbC,gBAAgB;EAChBC,OAAO;EACPC,KAAK;EACLC,IAAI;EACJC,QAAQ;EACRC;AACO,CAAC,EAAE;EACV,OAAO;IACLC,cAAc,EAAEP,aAAa;IAC7BQ,iBAAiB,EAAEP,gBAAgB;IACnCQ,QAAQ,EAAGC,IAAS,IAAK;MACvBT,gBAAgB,CAAC,KAAK,CAAC;MACvBC,OAAO,CAACQ,IAAI,CAAC;IACf,CAAC;IACDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,eAAe,EAAE,UAAUT,KAAK,EAAE;MAClC,cAAc,EAAE,kBAAkB;MAClC,sBAAsB,EAAEU,MAAM,CAACT,IAAI;IACrC,CAAC;IAEDC,QAAQ,EAAE,GAAGb,QAAQ,IAAIa,QAAQ,IAAIC,WAAW,EAAE;IAClDQ,OAAO,EAAE;EACX,CAAC;AACH;AAIF,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAEtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAgB,EAAE,CAAC;EACjE,MAAM;IAACiC;EAAiB,CAAC,GAAGzB,SAAS,CAAC,CAAC;EACvC,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAClE,MAAMkC,WAAW,GAAGD,iBAAiB,CAACJ,IAAI,CAAC;EAEzC,MAAMM,cAAc,GAAGpC,MAAM,CAAwB,IAAI,CAAC;EAE1D,MAAMqC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACzB,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC;EAGDC,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EAE1B,MAAM;IAAClB;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EACzB,MAAM;IAACW;EAAI,CAAC,GAAGX,OAAO,CAAC,CAAC;EAExB,MAAMqC,iBAA0B,GAAG;IAAC9B,aAAa;IAAEC,gBAAgB;IAAEC,OAAO,EAAEiB,cAAc;IAAEhB,KAAK;IAAEC,IAAI;IAAEC,QAAQ,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC;EAKzI,MAAMyB,GAAiB,GAAGhC,eAAe,CAAC+B,iBAAiB,CAAC;EAC5D,MAAM,CAACE,KAAK,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAACqC,GAAG,CAAC;EAGzC,oBACEjC,OAAA,CAACT,SAAS;IAAA6C,QAAA,gBACRpC,OAAA,CAACV,GAAG;MAAC+C,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAH,QAAA,gBAClCpC,OAAA,CAACR,UAAU;QAACgD,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAL,QAAA,EAClClB;MAAI;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACb7C,OAAA,CAACV,GAAG;QAAC+C,EAAE,EAAE;UAAES,SAAS,EAAE,OAAO;UAAEC,SAAS,EAAE,MAAM;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAZ,QAAA,EACvDb,WAAW,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1BnD,OAAA,CAACP,OAAO;UAEN2D,MAAM,EAAEF,GAAG,CAACE,MAAO;UACnBC,IAAI,EAAEH,GAAG,CAACG,IAAK;UACfC,SAAS,EAAEJ,GAAG,CAACK;QAAK,GAHfJ,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eACN7C,OAAA,CAACF,YAAY;MAACoB,IAAI,EAAEA,IAAK;MAACO,cAAc,EAAGA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAGhB,CAAC;AAAC1B,EAAA,CAlDIF,QAAiC;EAAA,QAGTpB,SAAS,EAarBF,OAAO,EACRA,OAAO,EAQMC,QAAQ;AAAA;AAAA4D,EAAA,GAzBhCvC,QAAiC;AAuDvC,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}