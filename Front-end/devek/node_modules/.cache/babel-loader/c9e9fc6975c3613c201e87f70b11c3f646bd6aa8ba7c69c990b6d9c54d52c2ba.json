{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx\",\n  _s = $RefreshSig$();\n// ChatRoom.tsx\nimport React, { useRef, useState } from 'react';\nimport { Box, Container, Typography } from '@mui/material';\nimport Message from './Message';\nimport { API_HOST } from '../../hooks/UseFetch';\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { useFetch } from \"../../hooks/UseFetch\";\nimport { useSocket } from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function generateRequest({\n  updateTrigger,\n  setUpdateTrigger,\n  setData,\n  token,\n  user,\n  endpoint,\n  queryParams\n}) {\n  return {\n    triggerRequest: updateTrigger,\n    setTriggerRequest: setUpdateTrigger,\n    callback: data => {\n      setUpdateTrigger(false);\n      setData(data);\n    },\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n      \"X-Consumer-Custom-Id\": String(user)\n    },\n    endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n    payload: null\n  };\n}\nconst ChatRoom = ({\n  room\n}) => {\n  _s();\n  const [oldMessages, setOldMessages] = useState([]);\n  const {\n    getMessagesByRoom\n  } = useSocket();\n  const [updateTrigger, setUpdateTrigger] = useState(false);\n  const newMessages = getMessagesByRoom(room);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  console.log(newMessages);\n  const {\n    token\n  } = useAuth();\n  const {\n    user\n  } = useAuth();\n  const oldMessagesParams = {\n    updateTrigger,\n    setUpdateTrigger,\n    setData: setOldMessages,\n    token,\n    user,\n    endpoint: \"\",\n    queryParams: \"\"\n  };\n  const req = generateRequest(oldMessagesParams);\n  const [error, isLoading] = useFetch(req);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 2,\n        height: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxHeight: '550px',\n          overflowY: 'auto',\n          mb: 2\n        },\n        children: [newMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          sender: msg.sender,\n          text: msg.text,\n          timestamp: msg.date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef,\n          children: \" test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInputBar, {\n      room: room,\n      scrollToBottom: scrollToBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"OWElrxsfgf6ytOlKDVSvDjtFgcA=\", false, function () {\n  return [useSocket, useAuth, useAuth, useFetch];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useRef","useState","Box","Container","Typography","Message","API_HOST","useAuth","useFetch","useSocket","ChatInputBar","jsxDEV","_jsxDEV","generateRequest","updateTrigger","setUpdateTrigger","setData","token","user","endpoint","queryParams","triggerRequest","setTriggerRequest","callback","data","method","headers","String","payload","ChatRoom","room","_s","oldMessages","setOldMessages","getMessagesByRoom","newMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","console","log","oldMessagesParams","req","error","isLoading","children","sx","my","height","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","mb","map","msg","index","sender","text","timestamp","date","ref","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\nimport React, {useRef, useState} from 'react';\nimport {Box, TextField, Button, Container, Typography, Grid, Divider} from '@mui/material';\nimport Message from './Message';\nimport {API_HOST} from '../../hooks/UseFetch';\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {FetchRequest, useFetch} from \"../../hooks/UseFetch\";\nimport {useSocket} from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';\n\ninterface ChatRoomProps {\n    room: string;\n}\n\ninterface ChatMessage {\n    sender: string;\n    text: string;\n    timestamp: string;\n}\n\ntype Request = {\n    updateTrigger: boolean;\n    setUpdateTrigger: (value: boolean) => void;\n    setData: (data: ChatMessage[]) => void;\n    token: string;\n    user: string | null;\n    endpoint: string;\n    queryParams: string;\n};\n\nexport function generateRequest({\n                                    updateTrigger,\n                                    setUpdateTrigger,\n                                    setData,\n                                    token,\n                                    user,\n                                    endpoint,\n                                    queryParams,\n                                }: Request) {\n    return {\n        triggerRequest: updateTrigger,\n        setTriggerRequest: setUpdateTrigger,\n        callback: (data: any) => {\n            setUpdateTrigger(false);\n            setData(data);\n        },\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n            \"X-Consumer-Custom-Id\": String(user),\n        },\n\n        endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n        payload: null,\n    };\n}\n\n\nconst ChatRoom: React.FC<ChatRoomProps> = ({room}) => {\n\n    const [oldMessages, setOldMessages] = useState<ChatMessage[]>([]);\n    const {getMessagesByRoom} = useSocket();\n    const [updateTrigger, setUpdateTrigger] = useState<boolean>(false);\n    const newMessages = getMessagesByRoom(room);\n\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({behavior: \"smooth\"});\n    };\n\n\n    console.log(newMessages);\n\n    const {token} = useAuth();\n    const {user} = useAuth();\n\n    const oldMessagesParams: Request = {\n        updateTrigger,\n        setUpdateTrigger,\n        setData: setOldMessages,\n        token,\n        user,\n        endpoint: \"\",\n        queryParams: \"\"\n    };\n\n\n    const req: FetchRequest = generateRequest(oldMessagesParams);\n    const [error, isLoading] = useFetch(req);\n\n\n    return (\n        <Container>\n            <Box sx={{my: 2, height: \"600px\"}}>\n                <Typography variant=\"h4\" gutterBottom>\n                    {room}\n                </Typography>\n                <Box sx={{maxHeight: '550px', overflowY: 'auto', mb: 2}}>\n                    {newMessages.map((msg, index) => (\n                        <Message\n                            key={index}\n                            sender={msg.sender}\n                            text={msg.text}\n                            timestamp={msg.date}\n                        />\n                    ))}\n                    <div ref = {messagesEndRef}> test</div>\n                </Box>\n\n\n            </Box>\n            <ChatInputBar room={room} scrollToBottom={scrollToBottom}/>\n        </Container>\n\n    );\n};\n\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}