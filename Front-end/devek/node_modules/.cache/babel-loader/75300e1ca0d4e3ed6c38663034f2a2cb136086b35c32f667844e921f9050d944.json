{"ast":null,"code":"import React,{useState}from\"react\";import{Box,TextField,IconButton}from\"@mui/material\";import SendIcon from\"@mui/icons-material/Send\";import{useRoom}from\"../../contexts/ChatRoomsContext\";import{useAuth}from\"../../contexts/UserContext\";import{API_HOST}from\"../../hooks/UseFetch\";import{fetchAPI}from\"../utils/fetch\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInputBar=_ref=>{let{room}=_ref;const[message,setMessage]=useState(\"\");const{sendMessage}=useRoom();const{user,token,logOut}=useAuth();const handleSend=async()=>{if(message.trim()!==\"\"){const data={group:room,name:user,email:user,text:message};sendMessage(data);setMessage(\"\");const payload={text:message,date:new Date().toISOString()};return await fetchAPI(token,user,payload,logOut,`${API_HOST}/groupchats/${room}/message/`,'POST');}};return/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\",gap:1,// Spacing between elements\npadding:1,backgroundColor:\"background.paper\",borderTop:\"1px solid\",borderColor:\"divider\"},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type a message...\",value:message,onChange:e=>setMessage(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&handleSend()}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:handleSend,children:/*#__PURE__*/_jsx(SendIcon,{})})]});};export default ChatInputBar;","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","useRoom","useAuth","API_HOST","fetchAPI","jsx","_jsx","jsxs","_jsxs","ChatInputBar","_ref","room","message","setMessage","sendMessage","user","token","logOut","handleSend","trim","data","group","name","email","text","payload","date","Date","toISOString","sx","display","alignItems","gap","padding","backgroundColor","borderTop","borderColor","children","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","color","onClick"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {Box, TextField, IconButton} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {useRoom} from \"../../contexts/ChatRoomsContext\";\nimport {MessageDTO} from \"../../contexts/ChatRoomsContext\";\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {API_HOST} from \"../../hooks/UseFetch\";\nimport {fetchAPI} from \"../utils/fetch\";\n\n\ninterface ChatInputBarProps {\n    room: string,\n}\n\n\n\nconst ChatInputBar: React.FC<ChatInputBarProps> = ({room}) => {\n    const [message, setMessage] = useState(\"\");\n    const {sendMessage} = useRoom();\n    const {user, token, logOut} = useAuth();\n\n    const handleSend = async () => {\n        if (message.trim() !== \"\") {\n\n            const data: MessageDTO = {group: room, name: user, email: user, text: message}\n            sendMessage(data);\n\n            setMessage(\"\");\n\n\n            const payload = {\n                text: message,\n                date: new Date().toISOString(),\n            };\n\n\n            return await fetchAPI(token, user, payload, logOut, `${API_HOST}/groupchats/${room}/message/`, 'POST');\n\n\n        }\n\n\n    };\n\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1, // Spacing between elements\n                padding: 1,\n                backgroundColor: \"background.paper\",\n                borderTop: \"1px solid\",\n                borderColor: \"divider\",\n            }}\n        >\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n            />\n            <IconButton color=\"primary\" onClick={handleSend}>\n                <SendIcon/>\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default ChatInputBar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAAQC,GAAG,CAAEC,SAAS,CAAEC,UAAU,KAAO,eAAe,CACxD,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,OAAQC,OAAO,KAAO,iCAAiC,CAEvD,OAAQC,OAAO,KAAO,4BAA4B,CAClD,OAAQC,QAAQ,KAAO,sBAAsB,CAC7C,OAAQC,QAAQ,KAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASxC,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAY,IAAX,CAACC,IAAI,CAAC,CAAAD,IAAA,CACrD,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACkB,WAAW,CAAC,CAAGb,OAAO,CAAC,CAAC,CAC/B,KAAM,CAACc,IAAI,CAAEC,KAAK,CAAEC,MAAM,CAAC,CAAGf,OAAO,CAAC,CAAC,CAEvC,KAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAEvB,KAAM,CAAAC,IAAgB,CAAG,CAACC,KAAK,CAAEV,IAAI,CAAEW,IAAI,CAAEP,IAAI,CAAEQ,KAAK,CAAER,IAAI,CAAES,IAAI,CAAEZ,OAAO,CAAC,CAC9EE,WAAW,CAACM,IAAI,CAAC,CAEjBP,UAAU,CAAC,EAAE,CAAC,CAGd,KAAM,CAAAY,OAAO,CAAG,CACZD,IAAI,CAAEZ,OAAO,CACbc,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACjC,CAAC,CAGD,MAAO,MAAM,CAAAxB,QAAQ,CAACY,KAAK,CAAED,IAAI,CAAEU,OAAO,CAAER,MAAM,CAAE,GAAGd,QAAQ,eAAeQ,IAAI,WAAW,CAAE,MAAM,CAAC,CAG1G,CAGJ,CAAC,CAGD,mBACIH,KAAA,CAACX,GAAG,EACAgC,EAAE,CAAE,CACAC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,GAAG,CAAE,CAAC,CAAE;AACRC,OAAO,CAAE,CAAC,CACVC,eAAe,CAAE,kBAAkB,CACnCC,SAAS,CAAE,WAAW,CACtBC,WAAW,CAAE,SACjB,CAAE,CAAAC,QAAA,eAEF/B,IAAA,CAACR,SAAS,EACNwC,SAAS,MACTC,OAAO,CAAC,UAAU,CAClBC,WAAW,CAAC,mBAAmB,CAC/BC,KAAK,CAAE7B,OAAQ,CACf8B,QAAQ,CAAGC,CAAC,EAAK9B,UAAU,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5CI,SAAS,CAAGF,CAAC,EAAKA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAI5B,UAAU,CAAC,CAAE,CACvD,CAAC,cACFZ,IAAA,CAACP,UAAU,EAACgD,KAAK,CAAC,SAAS,CAACC,OAAO,CAAE9B,UAAW,CAAAmB,QAAA,cAC5C/B,IAAA,CAACN,QAAQ,GAAC,CAAC,CACH,CAAC,EACZ,CAAC,CAEd,CAAC,CAED,cAAe,CAAAS,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}