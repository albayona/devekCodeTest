{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useSocket } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInputBar = ({\n  room\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const {\n    sendMessage\n  } = useSocket();\n  const {\n    user\n  } = useAuth();\n  const [updateTrigger, setUpdateTrigger] = useState(true);\n  const handleSend = () => {\n    if (message.trim() !== \"\") {\n      const data = {\n        group: room,\n        name: user,\n        email: user,\n        text: message\n      };\n      sendMessage(data);\n      setMessage(\"\");\n    }\n  };\n  const paramsJoined = {\n    updateTrigger,\n    setUpdateTrigger,\n    setData: setJoinedRooms,\n    token,\n    user,\n    endpoint: \"groupchats/joined/\",\n    queryParams: \"\"\n  };\n  const [error, isLoading] = useFetch(generateRequestJoined(paramsJoined));\n  const [errorA, isLoadingA] = useFetch(generateRequestAvailable(paramsAvailable));\n  function generateRequestJoined({\n    updateTrigger,\n    setUpdateTrigger,\n    setData,\n    token,\n    user,\n    endpoint,\n    queryParams\n  }) {\n    return {\n      triggerRequest: updateTrigger,\n      setTriggerRequest: setUpdateTrigger,\n      callback: data => {\n        setUpdateTrigger(false);\n        setData(data['joined_groupchats']);\n        for (const g of data['joined_groupchats']) {\n          socket.emit(\"join_group\", {\n            \"group\": g\n          });\n        }\n      },\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"X-Consumer-Custom-Id\": String(user)\n      },\n      endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n      payload: null\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      // Spacing between elements\n      padding: 1,\n      backgroundColor: \"background.paper\",\n      borderTop: \"1px solid\",\n      borderColor: \"divider\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: handleSend,\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInputBar, \"hGSX6OBvQQWtcHfgMIBTVz2bYVM=\", true, function () {\n  return [useSocket, useAuth];\n});\n_c = ChatInputBar;\nexport default ChatInputBar;\nvar _c;\n$RefreshReg$(_c, \"ChatInputBar\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","useSocket","useAuth","jsxDEV","_jsxDEV","ChatInputBar","room","_s","message","setMessage","sendMessage","user","updateTrigger","setUpdateTrigger","handleSend","trim","data","group","name","email","text","paramsJoined","setData","setJoinedRooms","token","endpoint","queryParams","error","isLoading","useFetch","generateRequestJoined","errorA","isLoadingA","generateRequestAvailable","paramsAvailable","triggerRequest","setTriggerRequest","callback","g","socket","emit","method","headers","String","API_HOST","payload","sx","display","alignItems","gap","padding","backgroundColor","borderTop","borderColor","children","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useSocket } from \"../../contexts/ChatRoomsContext\";\nimport { MessageDTO } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\n\n\ninterface ChatInputBarProps{\n  room: string;\n}\n\nconst ChatInputBar: React.FC<ChatInputBarProps> = ({room}) => {\n  const [message, setMessage] = useState(\"\");\n  const {sendMessage} = useSocket();\n  const {user} = useAuth();\n    const [updateTrigger, setUpdateTrigger] = useState<boolean>(true);\n\n  const handleSend = () => {\n    if (message.trim() !== \"\") {\n\n      const data: MessageDTO = {group: room, name: user, email: user, text:  message }\n      sendMessage(data);\n      setMessage(\"\");\n    }\n  };\n\n\n\n  const paramsJoined: Request = { updateTrigger, setUpdateTrigger, setData: setJoinedRooms, token, user, endpoint: \"groupchats/joined/\", queryParams: \"\" };\n  \n  const [error, isLoading] = useFetch(generateRequestJoined(paramsJoined));\n  const [errorA, isLoadingA] = useFetch(generateRequestAvailable(paramsAvailable));\n\n  function generateRequestJoined({\n    updateTrigger,\n    setUpdateTrigger,\n    setData,\n    token,\n    user,\n    endpoint,\n    queryParams,\n  }: Request) {\n    return {\n      triggerRequest: updateTrigger,\n      setTriggerRequest: setUpdateTrigger,\n      callback: (data: any) => {\n        setUpdateTrigger(false);\n        setData(data['joined_groupchats']);\n\n        for (const g of data['joined_groupchats']) {\n          socket.emit(\"join_group\", {\"group\": g} );\n        }\n\n      },\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"X-Consumer-Custom-Id\": String(user),\n      },\n\n      endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n      payload: null,\n    };\n  }\n\n\n\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 1, // Spacing between elements\n        padding: 1,\n        backgroundColor: \"background.paper\",\n        borderTop: \"1px solid\",\n        borderColor: \"divider\",\n      }}\n    >\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        placeholder=\"Type a message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n      />\n      <IconButton color=\"primary\" onClick={handleSend}>\n        <SendIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default ChatInputBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}