{"ast":null,"code":"export async function fetchAPI(token,user,payload,logOut,endpoint,method){try{const req={method:method,headers:{\"Authorization\":`Bearer ${token}`,\"Content-Type\":\"application/json\",\"X-Consumer-Custom-Id\":String(user)}};if(method==='POST'||method==='PUT'){req.body=JSON.stringify(payload);}const response=await fetch(endpoint,req);if(response.status===401){console.warn(\"Unauthorized request. Redirecting to login...\");if(user!==null){logOut();}throw new Error(\"Unauthorized request. Redirecting to login...\");}if(!response.ok){throw new Error(`Error: ${response.statusText}`);}return await response.json();}catch(error){console.error(\"Failed to send message:\",error);return null;}}","map":{"version":3,"names":["fetchAPI","token","user","payload","logOut","endpoint","method","req","headers","String","body","JSON","stringify","response","fetch","status","console","warn","Error","ok","statusText","json","error"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/utils/fetch.tsx"],"sourcesContent":["\n\n\nexport async function fetchAPI(token: string, user: string | null, payload: unknown, logOut: () => void, endpoint: string, method: string) {\n    try {\n\n        const req: RequestInit = {\n            method: method,\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\": \"application/json\",\n                \"X-Consumer-Custom-Id\": String(user),\n            },\n        };\n\n        if (method === 'POST' || method === 'PUT') {\n            req.body = JSON.stringify(payload);\n        }\n\n\n        const response = await fetch(endpoint, req);\n\n        if (response.status === 401) {\n            console.warn(\"Unauthorized request. Redirecting to login...\");\n\n            if (user !== null) {\n                logOut();\n            }\n\n            throw new Error(\"Unauthorized request. Redirecting to login...\");\n        }\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        return null;\n    }\n}"],"mappings":"AAGA,MAAO,eAAe,CAAAA,QAAQA,CAACC,KAAa,CAAEC,IAAmB,CAAEC,OAAgB,CAAEC,MAAkB,CAAEC,QAAgB,CAAEC,MAAc,CAAE,CACvI,GAAI,CAEA,KAAM,CAAAC,GAAgB,CAAG,CACrBD,MAAM,CAAEA,MAAM,CACdE,OAAO,CAAE,CACL,eAAe,CAAE,UAAUP,KAAK,EAAE,CAClC,cAAc,CAAE,kBAAkB,CAClC,sBAAsB,CAAEQ,MAAM,CAACP,IAAI,CACvC,CACJ,CAAC,CAED,GAAII,MAAM,GAAK,MAAM,EAAIA,MAAM,GAAK,KAAK,CAAE,CACvCC,GAAG,CAACG,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CACtC,CAGA,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACT,QAAQ,CAAEE,GAAG,CAAC,CAE3C,GAAIM,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzBC,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC,CAE7D,GAAIf,IAAI,GAAK,IAAI,CAAE,CACfE,MAAM,CAAC,CAAC,CACZ,CAEA,KAAM,IAAI,CAAAc,KAAK,CAAC,+CAA+C,CAAC,CACpE,CAEA,GAAI,CAACL,QAAQ,CAACM,EAAE,CAAE,CACd,KAAM,IAAI,CAAAD,KAAK,CAAC,UAAUL,QAAQ,CAACO,UAAU,EAAE,CAAC,CACpD,CAEA,MAAO,MAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZN,OAAO,CAACM,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,KAAI,CACf,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}