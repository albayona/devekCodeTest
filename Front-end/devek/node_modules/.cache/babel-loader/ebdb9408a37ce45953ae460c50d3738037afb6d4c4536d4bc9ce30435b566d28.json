{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useRoom } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { API_HOST } from \"../../hooks/UseFetch\";\nimport { fetchAPI } from \"../utils/fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInputBar = ({\n  room\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const {\n    sendMessage\n  } = useRoom();\n  const {\n    user,\n    token,\n    logOut\n  } = useAuth();\n  const handleSend = async () => {\n    if (message.trim() !== \"\") {\n      const data = {\n        group: room,\n        name: user,\n        email: user,\n        text: message\n      };\n      sendMessage(data);\n      setMessage(\"\");\n      const payload = {\n        text: message,\n        date: new Date().toISOString()\n      };\n      return await fetchAPI(token, user, payload, logOut, `${API_HOST}/groupchats/${room}/message/`, 'POST');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      // Spacing between elements\n      padding: 1,\n      backgroundColor: \"background.paper\",\n      borderTop: \"1px solid\",\n      borderColor: \"divider\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: handleSend,\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInputBar, \"BZig0tH8WIlFthdIGsapk1XMWiw=\", false, function () {\n  return [useRoom, useAuth];\n});\n_c = ChatInputBar;\nexport default ChatInputBar;\nvar _c;\n$RefreshReg$(_c, \"ChatInputBar\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","useRoom","useAuth","API_HOST","fetchAPI","jsxDEV","_jsxDEV","ChatInputBar","room","_s","message","setMessage","sendMessage","user","token","logOut","handleSend","trim","data","group","name","email","text","payload","date","Date","toISOString","sx","display","alignItems","gap","padding","backgroundColor","borderTop","borderColor","children","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {Box, TextField, IconButton} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {useRoom} from \"../../contexts/ChatRoomsContext\";\nimport {MessageDTO} from \"../../contexts/ChatRoomsContext\";\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {API_HOST} from \"../../hooks/UseFetch\";\nimport {fetchAPI} from \"../utils/fetch\";\n\n\ninterface ChatInputBarProps {\n    room: string,\n}\n\n\n\nconst ChatInputBar: React.FC<ChatInputBarProps> = ({room}) => {\n    const [message, setMessage] = useState(\"\");\n    const {sendMessage} = useRoom();\n    const {user, token, logOut} = useAuth();\n\n    const handleSend = async () => {\n        if (message.trim() !== \"\") {\n\n            const data: MessageDTO = {group: room, name: user, email: user, text: message}\n            sendMessage(data);\n\n            setMessage(\"\");\n\n\n            const payload = {\n                text: message,\n                date: new Date().toISOString(),\n            };\n\n\n            return await fetchAPI(token, user, payload, logOut, `${API_HOST}/groupchats/${room}/message/`, 'POST');\n\n\n        }\n\n\n    };\n\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1, // Spacing between elements\n                padding: 1,\n                backgroundColor: \"background.paper\",\n                borderTop: \"1px solid\",\n                borderColor: \"divider\",\n            }}\n        >\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n            />\n            <IconButton color=\"primary\" onClick={handleSend}>\n                <SendIcon/>\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default ChatInputBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,GAAG,EAAEC,SAAS,EAAEC,UAAU,QAAO,eAAe;AACxD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAAQC,OAAO,QAAO,iCAAiC;AAEvD,SAAQC,OAAO,QAAO,4BAA4B;AAClD,SAAQC,QAAQ,QAAO,sBAAsB;AAC7C,SAAQC,QAAQ,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,YAAyC,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAACgB;EAAW,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC/B,MAAM;IAACY,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGb,OAAO,CAAC,CAAC;EAEvC,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAEvB,MAAMC,IAAgB,GAAG;QAACC,KAAK,EAAEX,IAAI;QAAEY,IAAI,EAAEP,IAAI;QAAEQ,KAAK,EAAER,IAAI;QAAES,IAAI,EAAEZ;MAAO,CAAC;MAC9EE,WAAW,CAACM,IAAI,CAAC;MAEjBP,UAAU,CAAC,EAAE,CAAC;MAGd,MAAMY,OAAO,GAAG;QACZD,IAAI,EAAEZ,OAAO;QACbc,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACjC,CAAC;MAGD,OAAO,MAAMtB,QAAQ,CAACU,KAAK,EAAED,IAAI,EAAEU,OAAO,EAAER,MAAM,EAAE,GAAGZ,QAAQ,eAAeK,IAAI,WAAW,EAAE,MAAM,CAAC;IAG1G;EAGJ,CAAC;EAGD,oBACIF,OAAA,CAACT,GAAG;IACA8B,EAAE,EAAE;MACAC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,GAAG,EAAE,CAAC;MAAE;MACRC,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE,kBAAkB;MACnCC,SAAS,EAAE,WAAW;MACtBC,WAAW,EAAE;IACjB,CAAE;IAAAC,QAAA,gBAEF7B,OAAA,CAACR,SAAS;MACNsC,SAAS;MACTC,OAAO,EAAC,UAAU;MAClBC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAE7B,OAAQ;MACf8B,QAAQ,EAAGC,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI5B,UAAU,CAAC;IAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACF1C,OAAA,CAACP,UAAU;MAACkD,KAAK,EAAC,SAAS;MAACC,OAAO,EAAElC,UAAW;MAAAmB,QAAA,eAC5C7B,OAAA,CAACN,QAAQ;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAACvC,EAAA,CAtDIF,YAAyC;EAAA,QAErBN,OAAO,EACCC,OAAO;AAAA;AAAAiD,EAAA,GAHnC5C,YAAyC;AAwD/C,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}