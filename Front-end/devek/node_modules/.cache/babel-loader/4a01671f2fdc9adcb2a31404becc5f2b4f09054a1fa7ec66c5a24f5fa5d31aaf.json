{"ast":null,"code":"export async function fetchAPI(token, user, payload, logOut, endpoint, method) {\n  try {\n    const req = {\n      method: method,\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"X-Consumer-Custom-Id\": String(user)\n      }\n    };\n    if (method === 'POST' || method === 'PUT') {\n      req.body = JSON.stringify(payload);\n    }\n    const response = await fetch(endpoint, req);\n    if (response.status === 401) {\n      console.warn(\"Unauthorized request. Redirecting to login...\");\n      if (user !== null) {\n        logOut();\n      }\n      throw new Error(\"Unauthorized request. Redirecting to login...\");\n    }\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Failed to send message:\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["fetchAPI","token","user","payload","logOut","endpoint","method","req","headers","String","body","JSON","stringify","response","fetch","status","console","warn","Error","ok","statusText","json","error"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/utils/fetch.tsx"],"sourcesContent":["\n\n\nexport async function fetchAPI(token: string, user: string | null, payload: unknown, logOut: () => void, endpoint: string, method: string) {\n    try {\n\n        const req: RequestInit = {\n            method: method,\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\": \"application/json\",\n                \"X-Consumer-Custom-Id\": String(user),\n            },\n        };\n\n        if (method === 'POST' || method === 'PUT') {\n            req.body = JSON.stringify(payload);\n        }\n\n\n        const response = await fetch(endpoint, req);\n\n        if (response.status === 401) {\n            console.warn(\"Unauthorized request. Redirecting to login...\");\n\n            if (user !== null) {\n                logOut();\n            }\n\n            throw new Error(\"Unauthorized request. Redirecting to login...\");\n        }\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        return null;\n    }\n}"],"mappings":"AAGA,OAAO,eAAeA,QAAQA,CAACC,KAAa,EAAEC,IAAmB,EAAEC,OAAgB,EAAEC,MAAkB,EAAEC,QAAgB,EAAEC,MAAc,EAAE;EACvI,IAAI;IAEA,MAAMC,GAAgB,GAAG;MACrBD,MAAM,EAAEA,MAAM;MACdE,OAAO,EAAE;QACL,eAAe,EAAE,UAAUP,KAAK,EAAE;QAClC,cAAc,EAAE,kBAAkB;QAClC,sBAAsB,EAAEQ,MAAM,CAACP,IAAI;MACvC;IACJ,CAAC;IAED,IAAII,MAAM,KAAK,MAAM,IAAIA,MAAM,KAAK,KAAK,EAAE;MACvCC,GAAG,CAACG,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC;IACtC;IAGA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACT,QAAQ,EAAEE,GAAG,CAAC;IAE3C,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACzBC,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC;MAE7D,IAAIf,IAAI,KAAK,IAAI,EAAE;QACfE,MAAM,CAAC,CAAC;MACZ;MAEA,MAAM,IAAIc,KAAK,CAAC,+CAA+C,CAAC;IACpE;IAEA,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAID,KAAK,CAAC,UAAUL,QAAQ,CAACO,UAAU,EAAE,CAAC;IACpD;IAEA,OAAO,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}