{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useSocket } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { API_HOST } from \"../../hooks/UseFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInputBar = ({\n  room\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const {\n    sendMessage\n  } = useSocket();\n  const {\n    user\n  } = useAuth();\n  const [updateTrigger, setUpdateTrigger] = useState(true);\n  const handleSend = async () => {\n    if (message.trim() !== \"\") {\n      const data = {\n        group: room,\n        name: user,\n        email: user,\n        text: message\n      };\n      sendMessage(data);\n      setMessage(\"\");\n      const payload = {\n        message,\n        date: new Date().toISOString()\n      };\n      try {\n        const response = await fetch(`${API_HOST}/groupchats/${room}/message/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        return await response.json();\n      } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        return null;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      // Spacing between elements\n      padding: 1,\n      backgroundColor: \"background.paper\",\n      borderTop: \"1px solid\",\n      borderColor: \"divider\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: handleSend,\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInputBar, \"8MojbN4n3ToJ5x0Yo/4oYqY6ikQ=\", false, function () {\n  return [useSocket, useAuth];\n});\n_c = ChatInputBar;\nexport default ChatInputBar;\nvar _c;\n$RefreshReg$(_c, \"ChatInputBar\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","useSocket","useAuth","API_HOST","jsxDEV","_jsxDEV","ChatInputBar","room","_s","message","setMessage","sendMessage","user","updateTrigger","setUpdateTrigger","handleSend","trim","data","group","name","email","text","payload","date","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","error","console","sx","display","alignItems","gap","padding","backgroundColor","borderTop","borderColor","children","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useSocket } from \"../../contexts/ChatRoomsContext\";\nimport { MessageDTO } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { API_HOST } from \"../../hooks/UseFetch\";\n\n\ninterface ChatInputBarProps{\n  room: string;\n}\n\nconst ChatInputBar: React.FC<ChatInputBarProps> = ({room}) => {\n  const [message, setMessage] = useState(\"\");\n  const {sendMessage} = useSocket();\n  const {user} = useAuth();\n    const [updateTrigger, setUpdateTrigger] = useState<boolean>(true);\n\n  const  handleSend = async () => {\n    if (message.trim() !== \"\") {\n\n      const data: MessageDTO = {group: room, name: user, email: user, text:  message }\n      sendMessage(data);\n      setMessage(\"\");\n\n\n\n      const payload = {\n        message,\n        date: new Date().toISOString(), \n      };\n    \n      try {\n        const response = await fetch(`${API_HOST}/groupchats/${room}/message/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(payload),\n        });\n    \n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n    \n        return await response.json(); \n      } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        return null;\n      }\n\n\n    }\n\n\n\n\n\n  };\n\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 1, // Spacing between elements\n        padding: 1,\n        backgroundColor: \"background.paper\",\n        borderTop: \"1px solid\",\n        borderColor: \"divider\",\n      }}\n    >\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        placeholder=\"Type a message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n      />\n      <IconButton color=\"primary\" onClick={handleSend}>\n        <SendIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default ChatInputBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}