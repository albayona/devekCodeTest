{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx\",\n  _s = $RefreshSig$();\n// ChatRoom.tsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Container, Typography, Divider, Button } from '@mui/material';\nimport Message from './Message';\nimport { API_HOST } from '../../hooks/UseFetch';\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { useFetch } from \"../../hooks/UseFetch\";\nimport { useSocket } from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst ChatRoom = ({\n  room\n}) => {\n  _s();\n  const [oldMessages, setOldMessages] = useState([]);\n  const {\n    getMessagesByRoom\n  } = useSocket();\n  const [updateTrigger, setUpdateTrigger] = useState(false);\n  const newMessages = getMessagesByRoom(room);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\",\n      block: 'end'\n    });\n  };\n  console.log(newMessages);\n  const {\n    token\n  } = useAuth();\n  const {\n    user\n  } = useAuth();\n  const oldMessagesParams = {\n    updateTrigger,\n    setUpdateTrigger,\n    setData: setOldMessages,\n    token,\n    user,\n    endpoint: `${API_HOST}/groupchats/${room}/messages/`,\n    queryParams: \"\"\n  };\n  const req = generateRequest(oldMessagesParams);\n  const [error, isLoading] = useFetch(req);\n  useEffect(() => {\n    scrollToBottom();\n  }, [newMessages]);\n  function loadOlderMessages() {\n    setUpdateTrigger(true);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 2,\n        height: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        color: \"primary\",\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          my: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: loadOlderMessages,\n          children: \"Load Older Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxHeight: '550px',\n          overflowY: 'auto',\n          mb: 2\n        },\n        children: [newMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          sender: msg.sender,\n          text: msg.text,\n          timestamp: msg.date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInputBar, {\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"pe7BGqK7+ODPF28oXNj67JNiAdU=\", false, function () {\n  return [useSocket, useAuth, useAuth, useFetch];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nexport function generateRequest({\n  updateTrigger,\n  setUpdateTrigger,\n  setData,\n  token,\n  user,\n  endpoint,\n  queryParams\n}) {\n  return {\n    triggerRequest: updateTrigger,\n    setTriggerRequest: setUpdateTrigger,\n    callback: data => {\n      setUpdateTrigger(false);\n      setData(data);\n    },\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n      \"X-Consumer-Custom-Id\": String(user)\n    },\n    endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n    payload: null\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Container","Typography","Divider","Button","Message","API_HOST","useAuth","useFetch","useSocket","ChatInputBar","jsxDEV","_jsxDEV","ChatRoom","room","_s","oldMessages","setOldMessages","getMessagesByRoom","updateTrigger","setUpdateTrigger","newMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","block","console","log","token","user","oldMessagesParams","setData","endpoint","queryParams","req","generateRequest","error","isLoading","loadOlderMessages","children","sx","my","height","variant","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","onClick","maxHeight","overflowY","mb","map","msg","index","sender","text","timestamp","date","ref","_c","triggerRequest","setTriggerRequest","callback","data","method","headers","String","payload","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Box, TextField, Container, Typography, Grid, Divider, Button} from '@mui/material';\nimport Message from './Message';\nimport {API_HOST} from '../../hooks/UseFetch';\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {FetchRequest, useFetch} from \"../../hooks/UseFetch\";\nimport {useSocket} from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';;\n\ninterface ChatRoomProps {\n    room: string;\n}\n\ninterface ChatMessage {\n    sender: string;\n    text: string;\n    timestamp: string;\n}\n\ntype Request = {\n    updateTrigger: boolean;\n    setUpdateTrigger: (value: boolean) => void;\n    setData: (data: ChatMessage[]) => void;\n    token: string;\n    user: string | null;\n    endpoint: string;\n    queryParams: string;\n};\n\n\nconst ChatRoom: React.FC<ChatRoomProps> = ({room}) => {\n\n    const [oldMessages, setOldMessages] = useState<ChatMessage[]>([]);\n    const {getMessagesByRoom} = useSocket();\n    const [updateTrigger, setUpdateTrigger] = useState<boolean>(false);\n    const newMessages = getMessagesByRoom(room);\n\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({behavior: \"smooth\",  block: 'end',\n           });\n    };\n\n\n    console.log(newMessages);\n\n    const {token} = useAuth();\n    const {user} = useAuth();\n\n    const oldMessagesParams: Request = {\n        updateTrigger,\n        setUpdateTrigger,\n        setData: setOldMessages,\n        token,\n        user,\n        endpoint: `${API_HOST}/groupchats/${room}/messages/`,\n        queryParams: \"\"\n    };\n\n\n    const req: FetchRequest = generateRequest(oldMessagesParams);\n    const [error, isLoading] = useFetch(req);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [newMessages]);\n\n\n    function loadOlderMessages() {\n        setUpdateTrigger(true);\n    }\n\n    return (\n        <Container>\n            <Box sx={{my: 2, height: \"600px\"}}>\n                <Typography variant=\"h4\" gutterBottom color = \"primary\">\n                    {room}\n                </Typography>\n                <Divider/>\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", my: 1 }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={loadOlderMessages}>\n                        Load Older Messages\n                    </Button>\n                </Box>\n\n                <Box sx={{maxHeight: '550px', overflowY: 'auto', mb: 2}}>\n                    {newMessages.map((msg, index) => (\n                        <Message\n                            key={index}\n                            sender={msg.sender}\n                            text={msg.text}\n                            timestamp={msg.date}\n                        />\n                    ))}\n                    <Divider></Divider>\n                    <div ref = {messagesEndRef}> </div>\n                </Box>\n\n\n            </Box>\n            <ChatInputBar room={room} />\n        </Container>\n\n    );\n};\n\n\nexport default ChatRoom;\n\n\nexport function generateRequest({\n                                    updateTrigger,\n                                    setUpdateTrigger,\n                                    setData,\n                                    token,\n                                    user,\n                                    endpoint,\n                                    queryParams,\n                                }: Request) {\n    return {\n        triggerRequest: updateTrigger,\n        setTriggerRequest: setUpdateTrigger,\n        callback: (data: any) => {\n            setUpdateTrigger(false);\n            setData(data);\n        },\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n            \"X-Consumer-Custom-Id\": String(user),\n        },\n\n        endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n        payload: null,\n    };\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}