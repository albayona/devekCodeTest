{"ast":null,"code":"var _jsxFileName = \"/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, IconButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { useSocket } from \"../../contexts/ChatRoomsContext\";\nimport { useAuth } from \"../../contexts/UserContext\";\nimport { API_HOST } from \"../../hooks/UseFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInputBar = ({\n  room,\n  scrollToBottom\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const {\n    sendMessage\n  } = useSocket();\n  const {\n    user,\n    token\n  } = useAuth();\n  const handleSend = async () => {\n    if (message.trim() !== \"\") {\n      const data = {\n        group: room,\n        name: user,\n        email: user,\n        text: message\n      };\n      sendMessage(data);\n      scrollToBottom();\n      setMessage(\"\");\n      const payload = {\n        text: message,\n        date: new Date().toISOString()\n      };\n      try {\n        const response = await fetch(`${API_HOST}/groupchats/${room}/message/`, {\n          method: \"POST\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n            \"X-Consumer-Custom-Id\": String(user)\n          },\n          body: JSON.stringify(payload)\n        });\n        if (response.status === 401) {\n          console.warn(\"Unauthorized request. Redirecting to login...\");\n          if (user !== null) {\n            logOut();\n          }\n          throw new Error(\"Unauthorized request. Redirecting to login...\");\n        }\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        return await response.json();\n      } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        return null;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 1,\n      // Spacing between elements\n      padding: 1,\n      backgroundColor: \"background.paper\",\n      borderTop: \"1px solid\",\n      borderColor: \"divider\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"Type a message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: handleSend,\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInputBar, \"XYCa6LhkzgH7I2NRpSs41fDgzV0=\", false, function () {\n  return [useSocket, useAuth];\n});\n_c = ChatInputBar;\nexport default ChatInputBar;\nvar _c;\n$RefreshReg$(_c, \"ChatInputBar\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","useSocket","useAuth","API_HOST","jsxDEV","_jsxDEV","ChatInputBar","room","scrollToBottom","_s","message","setMessage","sendMessage","user","token","handleSend","trim","data","group","name","email","text","payload","date","Date","toISOString","response","fetch","method","headers","String","body","JSON","stringify","status","console","warn","logOut","Error","ok","statusText","json","error","sx","display","alignItems","gap","padding","backgroundColor","borderTop","borderColor","children","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","_c","$RefreshReg$"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatInputBar.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {Box, TextField, IconButton} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {useSocket} from \"../../contexts/ChatRoomsContext\";\nimport {MessageDTO} from \"../../contexts/ChatRoomsContext\";\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {API_HOST} from \"../../hooks/UseFetch\";\n\n\ninterface ChatInputBarProps {\n    room: string,\n    scrollToBottom: () => void\n}\n\nconst ChatInputBar: React.FC<ChatInputBarProps> = ({room, scrollToBottom}) => {\n    const [message, setMessage] = useState(\"\");\n    const {sendMessage} = useSocket();\n    const {user, token} = useAuth();\n\n    const handleSend = async () => {\n        if (message.trim() !== \"\") {\n\n            const data: MessageDTO = {group: room, name: user, email: user, text: message}\n            sendMessage(data);\n            scrollToBottom();\n            setMessage(\"\");\n\n\n            const payload = {\n                text: message,\n                date: new Date().toISOString(),\n            };\n\n            try {\n                const response = await fetch(`${API_HOST}/groupchats/${room}/message/`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\",\n                        \"X-Consumer-Custom-Id\": String(user),\n                    },\n                    body: JSON.stringify(payload),\n                });\n\n                if (response.status === 401) {\n                    console.warn(\"Unauthorized request. Redirecting to login...\");\n\n                    if (user !== null) {\n                        logOut();\n                    }\n\n                    throw new Error(\"Unauthorized request. Redirecting to login...\");\n                }\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.statusText}`);\n                }\n\n                return await response.json();\n            } catch (error) {\n                console.error(\"Failed to send message:\", error);\n                return null;\n            }\n\n\n        }\n\n\n    };\n\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1, // Spacing between elements\n                padding: 1,\n                backgroundColor: \"background.paper\",\n                borderTop: \"1px solid\",\n                borderColor: \"divider\",\n            }}\n        >\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type a message...\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n            />\n            <IconButton color=\"primary\" onClick={handleSend}>\n                <SendIcon/>\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default ChatInputBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}