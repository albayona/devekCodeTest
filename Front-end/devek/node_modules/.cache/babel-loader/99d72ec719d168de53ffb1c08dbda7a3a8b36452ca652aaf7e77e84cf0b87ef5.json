{"ast":null,"code":"// ChatRoom.tsx\nimport React,{useEffect,useRef,useState}from'react';import{Box,Container,Typography,Divider,Button,Stack}from'@mui/material';import Message from'./Message';import{API_HOST}from'../../hooks/UseFetch';import{useAuth}from\"../../contexts/UserContext\";import{useFetch}from\"../../hooks/UseFetch\";import{useRoom}from'../../contexts/ChatRoomsContext';import ChatInputBar from'./ChatInputBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";;const ChatRoom=_ref=>{let{room}=_ref;const[oldMessages,setOldMessages]=useState([]);const{getMessagesByRoom}=useRoom();const[updateTrigger,setUpdateTrigger]=useState(false);const newMessages=getMessagesByRoom(room);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\",block:'end'});};console.log(newMessages);const{token}=useAuth();const{user}=useAuth();const oldMessagesParams={updateTrigger,setUpdateTrigger,setData:setOldMessages,token,user,endpoint:`groupchats/${room}/messages/`,queryParams:\"\"};const req=generateRequest(oldMessagesParams);const[error,isLoading]=useFetch(req);useEffect(()=>{scrollToBottom();},[newMessages]);function loadOlderMessages(){setUpdateTrigger(true);}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Box,{sx:{my:2,height:\"600px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,color:\"primary\",children:room}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",justifyContent:\"center\",my:1},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:loadOlderMessages,children:\"Load Older Messages\"})}),/*#__PURE__*/_jsxs(Box,{sx:{maxHeight:\"520px\",overflowY:\"auto\",mb:2,display:\"flex\",flexDirection:\"column\"},children:[oldMessages.map((msg,index)=>/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{ml:msg.sender===user?10:0},children:/*#__PURE__*/_jsx(Message,{sender:msg.sender,text:msg.text,timestamp:msg.timestamp})},`old-${index}`)),newMessages.map((msg,index)=>/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{ml:msg.sender===user?10:0},children:/*#__PURE__*/_jsx(Message,{sender:msg.sender,text:msg.text,timestamp:msg.date})},`new-${index}`)),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})]}),/*#__PURE__*/_jsx(ChatInputBar,{room:room})]});};export default ChatRoom;export function generateRequest(_ref2){let{updateTrigger,setUpdateTrigger,setData,token,user,endpoint,queryParams}=_ref2;return{triggerRequest:updateTrigger,setTriggerRequest:setUpdateTrigger,callback:data=>{setUpdateTrigger(false);setData(data[\"messages\"]);},method:\"GET\",headers:{\"Authorization\":`Bearer ${token}`,\"Content-Type\":\"application/json\",\"X-Consumer-Custom-Id\":String(user)},endpoint:`${API_HOST}/${endpoint}?${queryParams}`,payload:null};}","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Container","Typography","Divider","Button","Stack","Message","API_HOST","useAuth","useFetch","useRoom","ChatInputBar","jsx","_jsx","jsxs","_jsxs","ChatRoom","_ref","room","oldMessages","setOldMessages","getMessagesByRoom","updateTrigger","setUpdateTrigger","newMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","block","console","log","token","user","oldMessagesParams","setData","endpoint","queryParams","req","generateRequest","error","isLoading","loadOlderMessages","children","sx","my","height","variant","gutterBottom","color","display","justifyContent","onClick","maxHeight","overflowY","mb","flexDirection","map","msg","index","direction","ml","sender","text","timestamp","date","ref","_ref2","triggerRequest","setTriggerRequest","callback","data","method","headers","String","payload"],"sources":["/Users/andresbayona/Documents/DevekRepo/devekCodeTest/Frontend/devek/src/components/Chat/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\nimport React, {useEffect, useRef, useState} from 'react';\nimport {Box, TextField, Container, Typography, Grid, Divider, Button, Stack} from '@mui/material';\nimport Message from './Message';\nimport {API_HOST} from '../../hooks/UseFetch';\nimport {useAuth} from \"../../contexts/UserContext\";\nimport {FetchRequest, useFetch} from \"../../hooks/UseFetch\";\nimport {useRoom} from '../../contexts/ChatRoomsContext';\nimport ChatInputBar from './ChatInputBar';;\n\ninterface ChatRoomProps {\n    room: string;\n}\n\ninterface ChatMessage {\n    sender: string;\n    text: string;\n    timestamp: string;\n}\n\ntype Request = {\n    updateTrigger: boolean;\n    setUpdateTrigger: (value: boolean) => void;\n    setData: (data: ChatMessage[]) => void;\n    token: string;\n    user: string | null;\n    endpoint: string;\n    queryParams: string;\n};\n\n\nconst ChatRoom: React.FC<ChatRoomProps> = ({room}) => {\n\n    const [oldMessages, setOldMessages] = useState<ChatMessage[]>([]);\n    const {getMessagesByRoom} = useRoom();\n    const [updateTrigger, setUpdateTrigger] = useState<boolean>(false);\n    const newMessages = getMessagesByRoom(room);\n\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({behavior: \"smooth\",  block: 'end',\n           });\n    };\n\n\n    console.log(newMessages);\n\n    const {token} = useAuth();\n    const {user} = useAuth();\n\n    const oldMessagesParams: Request = {\n        updateTrigger,\n        setUpdateTrigger,\n        setData: setOldMessages,\n        token,\n        user,\n        endpoint: `groupchats/${room}/messages/`,\n        queryParams: \"\"\n    };\n\n\n    const req: FetchRequest = generateRequest(oldMessagesParams);\n    const [error, isLoading] = useFetch(req);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [newMessages]);\n\n\n    function loadOlderMessages() {\n        setUpdateTrigger(true);\n    }\n\n    return (\n        <Container>\n            <Box sx={{my: 2, height: \"600px\"}}>\n                <Typography variant=\"h4\" gutterBottom color = \"primary\">\n                    {room}\n                </Typography>\n                <Divider/>\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", my: 1 }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={loadOlderMessages}>\n                        Load Older Messages\n                    </Button>\n                </Box>\n\n\n\n                <Box sx={{ maxHeight: \"520px\", overflowY: \"auto\", mb: 2, display: \"flex\", flexDirection: \"column\" }}>\n                    {oldMessages.map((msg, index) => (\n                        <Stack\n                            key={`old-${index}`}\n                            direction=\"row\"\n                            sx={{ ml: msg.sender === user ? 10 : 0 }}\n                        >\n                            <Message sender={msg.sender} text={msg.text} timestamp={msg.timestamp} />\n                        </Stack>\n                    ))}\n\n                    {newMessages.map((msg, index) => (\n                        <Stack\n                            key={`new-${index}`}\n                            direction=\"row\"\n                            sx={{ ml: msg.sender === user ? 10 : 0 }}\n                        >\n                            <Message sender={msg.sender} text={msg.text} timestamp={msg.date} />\n                        </Stack>\n                    ))}\n\n                    <Divider />\n                    <div ref={messagesEndRef}></div>\n                </Box>\n\n\n\n            </Box>\n            <ChatInputBar room={room} />\n        </Container>\n\n    );\n};\n\n\nexport default ChatRoom;\n\n\nexport function generateRequest({\n                                    updateTrigger,\n                                    setUpdateTrigger,\n                                    setData,\n                                    token,\n                                    user,\n                                    endpoint,\n                                    queryParams,\n                                }: Request) {\n    return {\n        triggerRequest: updateTrigger,\n        setTriggerRequest: setUpdateTrigger,\n        callback: (data: any) => {\n            setUpdateTrigger(false);\n            setData(data[\"messages\"]);\n        },\n        method: \"GET\",\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n            \"X-Consumer-Custom-Id\": String(user),\n        },\n\n        endpoint: `${API_HOST}/${endpoint}?${queryParams}`,\n        payload: null,\n    };\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}